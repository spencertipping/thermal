sdocp('client//thermal.js.sdoc', 'Thermal page driver | Spencer Tipping\nLicensed under the terms of the MIT source code license\n\n$(caterwaul.clone(\'std continuation seq montenegro\')(function () {\n\nPage construction.\nThe page is fairly simple. There is a list of tickets on the left and a list of comments on the right:\n\n| Progress      Comments\n  |             | comment1\n  | ticket1  ---| comment2\n  |             | comment3\n  | ticket2\n\nTickets look like this:\n\n| (ticket name) (initials) (status) (energy) (arrow)\n\nAnd the comments interface looks like this:\n\n| author1: comment text in a paragraph\n  author2: comment text in a paragraph\n  ....\n  [ textarea ] (post button)\n\nThere\'s also a small set of components on the right so that you can manipulate the story details.\n\n  $(\'body\').append(html[div > div.left_column(h1(\'Progress\'), div.all_stories) > div.right_column(h1(\'Comments\'), div.all_comments)]);\n\n  var story = {} /se[_.small_view(o) = html[div.story %is(o) > [span.name > o.name, span.initials > o.initials, a.status_changer(span.status > o.status), span.energy(o.energy), a.arrow(\'>>\')]],\n                     _.comment(o)    = html[div.comment %is(o) > (span.author > o.author, span.text > o.text)],\n                     _.comments(o)   = html[div.comments > div.list(seq[~o.comments *+story.comment]) > div.new_comment(textarea, button(\'Post\'))],\n\n                     where[is(x)(e) = e.data(\'original\', x)]];\n\n  let/cps[e <- $(\'.story .arrow\').click(_)][$(\'.all-comments\').empty().append(story.comments($(this).up(\'.story\').data(\'original\')))];\n\nRPC setup.\nThese functions are CPS-converted interfaces to the server database.\n\n  var rpc = caterwaul.montenegro.rpc /re[{stories: _(\'/stories\'), story: _(\'/story\')}];\n\nUser interface toplevel components.\nThere are a couple of things that need to happen at the toplevel. First, we need to issue a load request for all of the stories that currently exist. Then, we need to install a sensible\ndefault behavior for the \'create new story\' link.\n\n  let/cps[stories <- rpc.stories(_),\n          name    <- seq[~stories %s[s] *!+_],\n          s       <- rpc.story(name, _)]\n    [$(\'.all-stories\').append(story.small_view(s))]}));\n');