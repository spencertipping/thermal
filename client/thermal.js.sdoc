Thermal page driver | Spencer Tipping
Licensed under the terms of the MIT source code license

$(caterwaul.clone('std continuation seq montenegro')(function () {
  $('body').append(html[div > div.toolbar(button.new_story > 'New story') > div.left_column(h1('Progress'), div.all_stories) > div.right_column(h1('Comments'), div.all_comments)]);

  var story = {} /se[_.small_view(o) = html[div.story   %is(o) > [span.name > o.name, span.initials > o.initials, span.status > o.status, span.energy > o.energy, a.arrow > '>>']],
                     _.comment(o)    = html[div.comment %is(o) > [span.author > o.author, span.text > o.text]],
                     _.comments(o)   = html[div.comments > div.list(seq[~o.comments *+story.comment]) > div.new_comment(textarea, button('Post'))],

                     where[is(x)(e) = e.data('original', x)]];

  $('.story .arrow').live('click', _) /cps[$('.all-comments').empty().append(story.comments($(this).up('.story').data('original')))];
  $('.new-story')   .live('click', _) /cps[$('.all-stories').append(story.small_view({name: prompt('Please enter a name for your new story.'), comments: []}))];

RPC setup.
These functions are CPS-converted interfaces to the server database.

  var rpc = caterwaul.montenegro.rpc /re[{stories: _('/stories'), story: _('/story')}];

Story loader.

  let/cps[stories <- rpc.stories(_),
          name    <- seq[~stories %s[s] *!+_],
          s       <- rpc.story(name, _)]
    [$('.all-stories').append(story.small_view(s))]}));
