sdocp('server.js.sdoc', 'Thermal server | Spencer Tipping\nLicensed under the terms of the MIT source code license\n\ncaterwaul.clone(\'std db.file montenegro\')(function () {\n\nHTTP server.\nThe HTTP server just serves the composition of the individual services described below.\n\n  require(\'http\').createServer(composition()).listen(8080, \'0.0.0.0\'),\n  where*[\n    composition() = montenegro.http.compose(story_service.individual, story_service.listing, file_service, http[\'/favicon.ico\'][get = not_found()]),\n\n  Database.\n  The data is stored in one database. Stories are indexed in the global \'stories\' index, and comments are stored as strings in an array on the story.\n\n    story_service = let[stories = caterwaul.db.file(\'stories\')] in {individual: http[\'/stories/_\'][get = stories($[1])(ok), post = stories($[1])(post_json())(ok)],\n                                                                       listing: http[\'/stories\']  [get = stories.index(\'all\', ok)]},\n\n  File server.\n  When we get a GET request to something starting with /client, we serve from \'client\'.\n\n    file_service  = http[\'/client/_\'][get = require(\'fs\').readFile(\'.\' + $[0].replace(/\\.{2,}/g, \'.\'), \'ascii\', fn[err, data][response.writeHead(200), response.end(data)])]]})();\n');